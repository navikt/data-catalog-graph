swagger: "2.0"
info:
  description: Datacatalog metadata repository
  version: "0.0.1"
  title: Datacatalog metadata
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:

  /terms:
    get:
      operationId: term.read_all
      tags:
        - Terms
      summary: Read the entire list of term nodes
      description: Read the list of term nodes
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of term nodes to get from nodes
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering nodes
          required: false
      responses:
        200:
          description: Successfully read nodes list operation
          schema:
            type: array
            items:
              properties:
                properties:
                  type: string

  /concepts:
    get:
      operationId: concept.read_all
      tags:
        - Concepts
      summary: Read the entire list of concept nodes
      description: Read the entire list of concept nodes
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of concept nodes to get from nodes
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering nodes
          required: false
      responses:
        200:
          description: Successfully read nodes list operation
          schema:
            type: array
            items:
              properties:
                properties:
                  type: string

  /nodes:
    get:
      operationId: node.read_all
      tags:
        - Nodes
      summary: Read the entire list of nodes
      description: Read the list of nodes
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of nodes to get from nodes
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering nodes
          required: false
      responses:
        200:
          description: Successfully read nodes list operation
          schema:
            type: array
            items:
              properties:
                properties:
                  type: string

    post:
      operationId: node.create
      tags:
        - Node
      summary: Create a node
      description: Create a node
      parameters:
        - name: node
          in: body
          description: Node to create
          required: True
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of node to create
              prop:
                type: string
                description: Node properties
      responses:
        201:
          description: Successfully created new node

    delete:
      operationId: node.delete
      tags:
        - Nodes
      summary: Delete a node
      description: Delete a node
      parameters:
        - name: id
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully deleted the node

  /node/{id}:
    get:
      operationId: node.read_one
      tags:
        - Nodes
      summary: Get node by id
      description: Get node by id
      parameters:
        - name: id
          in: path
          description: id ff the node
          type: integer
          required: True
      responses:
        200:
          description: Successfully read person from people list operation
          schema:
            properties:
              id:
                type: integer
              prop:
                type: string
              crt_time:
                type: string

    put:
      operationId: node.update
      tags:
        - Node
      summary: Update a node
      description: Update a node
      parameters:
        - name: id
          in: path
          description: Id of node to update
          type: integer
          required: True
        - name: node
          in: body
          schema:
            type: object
            properties:
              id:
                type: integer
              prop:
                type: string
      responses:
        200:
          description: Successfully updated node
